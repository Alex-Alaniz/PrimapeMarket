-- Users Table: Stores user profiles with a primary wallet and display name
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    primary_wallet VARCHAR(42) UNIQUE NOT NULL,  -- E.g., "0x..."
    display_name VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User Emails Table: Allows multiple emails per user
CREATE TABLE user_emails (
    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
    email VARCHAR(255) UNIQUE NOT NULL,
    verified BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (user_id, email)
);

-- User Wallets Table: Allows linking multiple wallets to a user profile
CREATE TABLE user_wallets (
    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
    wallet_address VARCHAR(42) UNIQUE NOT NULL,
    PRIMARY KEY (user_id, wallet_address)
);

-- Markets Table: Stores market data from the smart contract
CREATE TABLE markets (
    market_id BIGINT PRIMARY KEY,
    question TEXT NOT NULL,
    end_time TIMESTAMP NOT NULL,
    resolved BOOLEAN DEFAULT FALSE,
    winning_option_index BIGINT,
    total_pool BIGINT DEFAULT 0
);

-- Wallet Activity Table: Tracks user activities like buying shares and claiming winnings
CREATE TABLE wallet_activity (
    id SERIAL PRIMARY KEY,
    wallet_address VARCHAR(42) NOT NULL,
    market_id BIGINT REFERENCES markets(market_id) ON DELETE CASCADE,
    option_index BIGINT NOT NULL,
    shares BIGINT NOT NULL,
    amount_spent BIGINT NOT NULL,  -- Amount spent on shares
    amount_claimed BIGINT DEFAULT 0,  -- Amount claimed after resolution
    event_type VARCHAR(20) CHECK (event_type IN ('buy', 'claim')) NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Users Leaderboard Table: Aggregates user performance metrics for the leaderboard
CREATE TABLE users_leaderboard (
    user_id INT PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE,
    total_invested BIGINT DEFAULT 0,
    total_claimed BIGINT DEFAULT 0,
    total_participated INT DEFAULT 0,
    total_won INT DEFAULT 0,
    total_lost INT DEFAULT 0,
    pnl BIGINT GENERATED ALWAYS AS (total_claimed - total_invested) STORED
);

-- Indices for performance optimization
CREATE INDEX idx_wallet_activity_wallet ON wallet_activity(wallet_address);
CREATE INDEX idx_wallet_activity_market ON wallet_activity(market_id);
CREATE INDEX idx_leaderboard_pnl ON users_leaderboard(pnl DESC);
CREATE INDEX idx_leaderboard_won ON users_leaderboard(total_won DESC);