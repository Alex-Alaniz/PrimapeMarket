Failed to compile

./src/components/market-shares-display.tsx
Error:   × the name `MarketSharesDisplay` is defined multiple times
    ╭─[/home/runner/workspace/src/components/market-shares-display.tsx:11:1]
  8 │     compact?: boolean;
  9 │ }
 10 │ 
 11 │ export function MarketSharesDisplay({
    ·                 ─────────┬─────────
    ·                          ╰── previous definition of `MarketSharesDisplay` here
 12 │     market,
 13 │     userShares,
 14 │     compact = false
 15 │ }: MarketSharesDisplayProps) {
 16 │     return (
 17 │         <div className={`flex flex-col ${compact ? 'gap-1' : 'gap-2'}`}>
 18 │             <div className="w-full text-sm text-muted-foreground">
 19 │                 Your shares:
 20 │                 <div className="flex flex-wrap gap-2 mt-1">
 21 │                     {market.options.map((option, index) => {
 22 │                         const shares = userShares[index] || BigInt(0);
 23 │                         const sharesInEther = Number(toEther(shares)).toFixed(2);
 24 │                         return (
 25 │                             <Badge 
 26 │                                 key={index} 
 27 │                                 variant={Number(sharesInEther) > 0 ? "default" : "secondary"}
 28 │                                 className={compact ? 'text-xs py-0.5' : ''}
 29 │                             >
 30 │                                 {option}: {sharesInEther}
 31 │                             </Badge>
 32 │                         );
 33 │                     })}
 34 │                 </div>
 35 │             </div>
 36 │         </div>
 37 │     );
 38 │ }
 39 │ import { Market } from "@/types/prediction-market";
 40 │ 
 41 │ interface MarketSharesDisplayProps {
 42 │   market: Market;
 43 │   userShares: bigint[];
 44 │   compact?: boolean;
 45 │ }
 46 │ 
 47 │ export function MarketSharesDisplay({ market, userShares, compact = false }: MarketSharesDisplayProps) {
    ·                 ─────────┬─────────
    ·                          ╰── `MarketSharesDisplay` redefined here
 48 │   // Calculate total user shares
 49 │   const totalUserShares = userShares.reduce((sum, shares) => sum + shares, BigInt(0));
 50 │   
    ╰────